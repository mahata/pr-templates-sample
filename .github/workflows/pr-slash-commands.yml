name: PR slash command template inserter

on:
  issue_comment:
    types: [created]

jobs:
  insert-template:
    if: |
      github.event.issue.pull_request &&
      startsWith(github.event.comment.body, '/template ')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Get template name
        id: parse
        run: |
          # Expected comment example: /template feature
          key=$(echo "${{ github.event.comment.body }}" | awk '{print $2}')
          echo "key=$key" >> $GITHUB_OUTPUT

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Read template file
        id: read
        run: |
          node <<'NODE'
          const fs = require('fs');
          const key = process.env.TEMPLATE_KEY;
          const file = `.github/PULL_REQUEST_TEMPLATE/${key}.md`;

          if (!fs.existsSync(file)) {
            console.log(`content=Template not found: ${file}`);
            process.exit(0);
          }

          const lines = fs.readFileSync(file, 'utf8').replace(/\r/g, '').split('\n'); // CRLF -> LF
          const escaped = lines.map(l => l.replace(/"/g, '\\"')); // " -> \"
          const content = escaped.join('\\n');
          console.log(`content=${content}`);
          NODE >> "$GITHUB_OUTPUT"

      - name: Get current PR body
        id: getpr
        uses: octokit/request-action@v2.4
        with:
          route: GET /repos/${{ github.repository }}/pulls/${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update PR body
        uses: octokit/request-action@v2.4
        with:
          route: PATCH /repos/${{ github.repository }}/pulls/${{ github.event.issue.number }}
          body: |
            {
              "body": "${{ steps.read.outputs.content }}\n\n---\n(Original content below)\n\n${{ fromJson(steps.getpr.outputs.data).body }}"
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
